// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "agent": {
    "always_allow_tool_actions": true,
    "default_profile": "write",
    "default_model": {
      "provider": "zed.dev",
      "model": "claude-opus-4-1-thinking"
    },
    "inline_assistant_model": {
      "provider": "zed.dev",
      "model": "claude-sonnet-4-thinking"
    }
  },
  "features": {
    "edit_prediction_provider": "zed"
  },
  "autosave": "on_focus_change",
  "auto_update": true,
  "use_autoclose": true,
  "use_auto_surround": true,
  "always_treat_brackets_as_autoclosed": true,
  "base_keymap": "JetBrains",
  "ui_font_size": 11,
  "buffer_font_size": 10,
  "theme": {
    "mode": "system",
    "light": "One Light",
    "dark": "One Dark"
  },
  "load_direnv": "shell_hook",
  "auto_install_extensions": {
    // https://zed.dev/docs/languages/bash
    "basher": true,
    // https://zed.dev/docs/languages/docker
    "dockerfile": true,
    "docker-compose": true,
    // https://zed.dev/docs/languages/helm
    "helm": true,
    // https://zed.dev/docs/languages/html
    "html": true,
    // https://zed.dev/docs/languages/kubernetes
    "kubernetes": true,
    // https://zed.dev/docs/languages/make
    "make": true,
    // https://zed.dev/docs/languages/proto
    "proto": true,
    // https://github.com/zed-extensions/postgres-context-server
    "postgres-context-server": true,
    // https://github.com/LoamStudios/zed-postgres-language-server
    "postgres-language-server": true,
    // https://github.com/zed-extensions/sql
    "sql": true,
    // https://github.com/gvozdvmozgu/sqruff-zed
    "sqruff": true,
    // https://zed.dev/docs/languages/toml
    "toml": true,
    // https://github.com/zed-industries/zed
    "ruff": true,
    // https://github.com/zed-extensions/ty
    "ty": true
  },
  "languages": {
    "Python": {
      "language_servers": ["ty", "pyright", "ruff"],
      "format_on_save": "on",
      "formatter": [
        {
          "code_actions": {
            "source.organizeImports.ruff": true,
            "source.fixAll.ruff": true,
            "notebook.source.organizeImports.ruff": true,
            "notebook.source.fixAll.ruff": true
          }
        },
        {
          "language_server": {
            "name": "ruff"
          }
        }
      ]
    },
    "SQL": {
      "use_auto_surround": true,
      "use_autoclose": true,
      "language_servers": [
        "postgres-language-server",
        "postgres-context-server",
        "sqruff",
        "sql"
      ],
      "format_on_save": "on",
      "formatter": [
        {
          "language_server": {
            "name": "sqruff"
          }
        }
      ]
    },
    "Helm": {
      "use_auto_surround": true,
      "use_autoclose": true,
      "tab_size": 2
    },
    "YAML": {
      "use_auto_surround": true,
      "use_autoclose": true,
      "tab_size": 2
    },
    "JSON": {
      "use_auto_surround": true,
      "use_autoclose": true,
      "tab_size": 2
    }
  },
  "lsp": {
    "pyright": {
      "settings": {
        "disableOrganizeImports": true,
        "autoImportCompletions": true,
        "python.analysis": {
          "diagnosticMode": "workspace",
          "typeCheckingMode": "on",
          "reportInvalidTypeForm": true,
          "ignore": ["tests/"],
          "autoSearchPaths": true
        },
        "python": {
          "pythonPath": ".venv/bin/python"
        }
      }
    },
    "ty": {
      "binary": {
        "path": "/Users/seanstewart/.local/bin/ty",
        "arguments": ["server"]
      }
    },
    "yaml-language-server": {
      "settings": {
        "yaml": {
          "customTags": ["!reference sequence"],
          "schemas": {
            "https://gitlab.com/gitlab-org/gitlab/-/raw/master/app/assets/javascripts/editor/schema/ci.json": [
              ".gitlab-ci*.yaml",
              ".gitlab-ci*.yml"
            ],
            "https://spec.openapis.org/oas/3.1/schema/2025-02-13": [
              "**/openapi.yaml",
              "**/openapi.yml"
            ],
            "https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json": [
              "**/*_test.yaml"
            ]
          }
        }
      }
    },
    "helm_ls": {
      "settings": {
        "helm-ls": {
          "yamlls": {
            "enabled": true,
            "config": {
              "schemas": {
                "https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/iam.cnrm.cloud.google.com/iamaccessboundarypolicy_v1beta1.json": [
                  "**/*iamAccessBoundaryPolicy.yaml",
                  "**/*IamAccessBoundaryPolicy.yaml"
                ],
                "https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/iam.cnrm.cloud.google.com/iampolicy_v1beta1.json": [
                  "**/*iamPolicy.yaml",
                  "**/*IamPolicy.yaml"
                ],
                "https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/iam.cnrm.cloud.google.com/iampolicymember_v1beta1.json": [
                  "**/*iamPolicyMember.yaml",
                  "**/*IamPolicyMember.yaml"
                ],
                "https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/iam.cnrm.cloud.google.com/iamserviceaccount_v1beta1.json": [
                  "**/*iamServiceAccount.yaml",
                  "**/*IamServiceAccount.yaml"
                ]
              }
            }
          }
        }
      }
    }
  },
  "file_types": {
    "Helm": [
      "**/templates/**/*.tpl",
      "**/templates/**/*.yaml",
      "**/templates/**/*.yml",
      "**/*Charts/**/*.yaml"
    ],
    "JSON": ["*.json", "devenv.lock"],
    "INI": ["**/*.properties", "**/.*rc", "*.sqlfluff"],
    "markdown": ["*.md", "*.mdc", ".rules"],
    "Dockerfile": ["Dockerfile", "Dockerfile.*"],
    "Make": ["Makefile", "Makefile.*", "*Makefile"],
    "Just": ["justfile", "justfile.*", "*.justfile"],
    "Shell Script": [
      "*.sh",
      "*.zsh",
      ".bash*",
      "*.bash",
      "*.*rc",
      "*.*rc.*",
      "**/envrc.*"
    ]
  }
}
